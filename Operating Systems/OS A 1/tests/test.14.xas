  loadi Stack, r15
  call main

.literal 0

.words 512
Stack:

main:
  loadi hellostr, r0       # load pointer to the string
  push r0                  # pust pointer as a parameter
  call puts                # call puts to output string
  call puts
  call puts
  call puts
  pop r0
  ret

hellostr:
.literal "Hello world!"

puts:
  push  r0             # save registers to be used
  push  r1
  mov   r15, r1        # save stack pointer
  loadi 6, r0          # add 3 words to access params
  add   r0, r1 
  load  r1, r0         # load param into r0

loop:                  # loop through string
  loadb r0, r1         # load byte
  test  r1, r1         # check if not nil byte
  br    output         # if byte is not nil, branch to output
  jr    done           # else branch to done
output:
  out   r1             # output byte
  inc   r0             # increment pointer
  jr    loop           # loop

done:
  loadi 0xa, r1        # output newline
  out   r1             #  
  pop   r1             # restore r1
  pop   r0             # restore r0
  ret                  # return
